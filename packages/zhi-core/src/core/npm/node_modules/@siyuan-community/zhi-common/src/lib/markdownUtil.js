/*
 * Copyright (c) 2023, Terwer . All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Terwer designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Terwer in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Terwer, Shenzhen, Guangdong, China, youweics@163.com
 * or visit www.terwer.space if you need additional information or have any
 * questions.
 */
System.register(["./md-adaptor/LuteAdaptor.js", "./md-adaptor/ShowdownAdaptor.js", "./utils/zhi-common-util.js"], function (exports_1, context_1) {
    "use strict";
    var LuteAdaptor_js_1, ShowdownAdaptor_js_1, zhi_common_util_js_1, MarkdownUtil;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (LuteAdaptor_js_1_1) {
                LuteAdaptor_js_1 = LuteAdaptor_js_1_1;
            },
            function (ShowdownAdaptor_js_1_1) {
                ShowdownAdaptor_js_1 = ShowdownAdaptor_js_1_1;
            },
            function (zhi_common_util_js_1_1) {
                zhi_common_util_js_1 = zhi_common_util_js_1_1;
            }
        ],
        execute: function () {
            /**
             * Markdown 处理工具类
             *
             * @author terwer
             * @version 1.0.0
             * @since 1.0.0
             */
            MarkdownUtil = class MarkdownUtil {
                logger;
                mdAdaptor = new ShowdownAdaptor_js_1.default();
                constructor() {
                    this.logger = zhi_common_util_js_1.createCommonLogger("markdown-util");
                }
                /**
                 * 获取当前 MD 解析器名称
                 */
                getCurrentAdaptorName() {
                    if (this.mdAdaptor instanceof LuteAdaptor_js_1.default) {
                        return "Lute";
                    }
                    else if (this.mdAdaptor instanceof ShowdownAdaptor_js_1.default) {
                        return "Showdown";
                    }
                    return "None";
                }
                /**
                 * 渲染Markdown
                 *
                 * @param md - Markdown文本
                 */
                async renderHTML(md) {
                    const luteNew = new LuteAdaptor_js_1.default();
                    this.logger.debug("Lute status =>", luteNew.isAvailable());
                    if (luteNew.isAvailable()) {
                        this.mdAdaptor = luteNew;
                    }
                    this.logger.info(`Using ${this.getCurrentAdaptorName()} as markdown renderer`);
                    return await this.mdAdaptor.renderMarkdownStr(md);
                }
            };
            exports_1("default", MarkdownUtil);
        }
    };
});
//# sourceMappingURL=markdownUtil.js.map