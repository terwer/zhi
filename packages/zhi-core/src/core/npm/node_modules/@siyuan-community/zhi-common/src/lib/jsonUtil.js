/*
 * Copyright (c) 2023, Terwer . All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Terwer designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Terwer in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Terwer, Shenzhen, Guangdong, China, youweics@163.com
 * or visit www.terwer.space if you need additional information or have any
 * questions.
 */
System.register(["ajv"], function (exports_1, context_1) {
    "use strict";
    var ajv_1, JsonUtil;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (ajv_1_1) {
                ajv_1 = ajv_1_1;
            }
        ],
        execute: function () {
            /**
             * 校验 JSON schema
             *
             * @author terwer
             * @version 1.5.0
             * @since 1.5.0
             */
            JsonUtil = class JsonUtil {
                ajv;
                constructor() {
                    this.ajv = new ajv_1.default();
                }
                validateJson(schema, data) {
                    const valid = this.ajv.validate(schema, data);
                    if (valid) {
                        return { valid };
                    }
                    else {
                        return { valid, error: this.ajv.errorsText() };
                    }
                }
                validateObjectSchema(schemaObject, dataObject) {
                    const valid = this.ajv.validate(schemaObject, dataObject);
                    if (valid) {
                        return { valid };
                    }
                    else {
                        return { valid, error: this.ajv.errorsText() };
                    }
                }
            };
            exports_1("default", JsonUtil);
        }
    };
});
//# sourceMappingURL=jsonUtil.js.map