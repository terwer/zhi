/*
 * Copyright (c) 2023, Terwer . All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Terwer designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Terwer in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Terwer, Shenzhen, Guangdong, China, youweics@163.com
 * or visit www.terwer.space if you need additional information or have any
 * questions.
 */
System.register(["compare-versions"], function (exports_1, context_1) {
    "use strict";
    var compare_versions_1, VersionUtil;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (compare_versions_1_1) {
                compare_versions_1 = compare_versions_1_1;
            }
        ],
        execute: function () {
            /**
             * 版本号比较
             *
             * @public
             * @author terwer
             * @since 1.0.2
             */
            VersionUtil = class VersionUtil {
                /**
                 * Compare [semver](https://semver.org/) version strings
                 * This library supports the full semver specification, including comparing versions with different number of digits like `1.0.0`, `1.0`, `1`, and pre-release versions like `1.0.0-alpha`.
                 *
                 * @param v1 - First version to compare
                 * @param v2 - Second version to compare
                 * @returns boolean true if v1 is higher than v2
                 */
                greater(v1, v2) {
                    return compare_versions_1.compareVersions(v1, v2) > 0;
                }
                /**
                 * Compare [semver](https://semver.org/) version strings
                 * This library supports the full semver specification, including comparing versions with different number of digits like `1.0.0`, `1.0`, `1`, and pre-release versions like `1.0.0-alpha`.
                 *
                 * @param v1 - First version to compare
                 * @param v2 - Second version to compare
                 * @returns boolean true if v1 is equal to v2
                 */
                equal(v1, v2) {
                    return compare_versions_1.compareVersions(v1, v2) === 0;
                }
                /**
                 * Compare [semver](https://semver.org/) version strings
                 * This library supports the full semver specification, including comparing versions with different number of digits like `1.0.0`, `1.0`, `1`, and pre-release versions like `1.0.0-alpha`.
                 *
                 * @param v1 - First version to compare
                 * @param v2 - Second version to compare
                 * @returns boolean true if v1 is lesser than v2
                 */
                lesser(v1, v2) {
                    return compare_versions_1.compareVersions(v1, v2) < 0;
                }
            };
            exports_1("default", VersionUtil);
        }
    };
});
//# sourceMappingURL=versionUtil.js.map