// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Types: should compile 'array' type' 1`] = `"\`string\`[]"`;

exports[`Types: should compile 'intersection' type' 1`] = `"[\`IntersectionClassA\`](classes/class.IntersectionClassA.md) & [\`IntersectionClassB\`](classes/class.IntersectionClassB.md)"`;

exports[`Types: should compile 'stringLiteral' type' 1`] = `""blue""`;

exports[`Types: should compile 'tuple' type' 1`] = `"[\`string\`, \`number\`]"`;

exports[`Types: should compile 'typeOperator' type ' 1`] = `"*unique* \`symbol\`"`;

exports[`Types: should compile 'union' of literal declarations 1`] = `"\\{bar: " " \\| "string" \\| "strong\\|with\\|pipes" \\| "type\\\`with\\\`backticks" \\| "\\<foo\\>" \\| "*";}"`;

exports[`Types: should compile 'union' of string literals types' 1`] = `""ease-in" \\| "ease-out""`;

exports[`Types: should compile collapsed 'function' type ' 1`] = `""`;

exports[`Types: should compile collapsed 'literal' type' 1`] = `"\`object\`"`;

exports[`Types: should compile collapsed 'objectLiteralType' type' 1`] = `"\`object\`"`;

exports[`Types: should compile conditional type ' 1`] = `"\`T\` *extends* \`string\` ? "string" : \`T\` *extends* \`number\` ? "number" : \`T\` *extends* \`boolean\` ? "boolean" : \`T\` *extends* \`undefined\` ? "undefined" : "object""`;

exports[`Types: should compile expanded 'function' type ' 1`] = `""`;

exports[`Types: should compile expanded 'literal' type' 1`] = `"\\{valueA: \`number\`; valueB: \`boolean\`; valueX: \\{valueA: \`number\`[]; valueY: (z: \`string\`) => \\{a: \`string\`; b: \`string\`;}; valueZ: \`string\`;}; valueY: () => \`string\`; valueZ: \`string\`;}"`;

exports[`Types: should compile expanded 'objectLiteralType' type' 1`] = `"\\{}"`;

exports[`Types: should compile intrinsic type' 1`] = `"\`string\`"`;

exports[`Types: should compile unionType with object literal type ' 1`] = `"\`string\` \\| \\{z: \`string\`;}"`;

exports[`Types: should resolve external refs with type params' 1`] = `"\`ClassWithTypeParams\`\\<[\`HTMLElement\`]( https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement ), [\`Error\`]( https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error )\\>"`;

exports[`Types: should resolve external refs' 1`] = `"[\`HTMLElement\`]( https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement )"`;
